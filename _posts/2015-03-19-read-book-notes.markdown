---
layout: post
category: life
tag: UNIX
title: "软件随想录"
date: 2015-03-19
---



##不搞政治
程序员早就练出了对公正有非常良好的判断力。代码要么能运行，要么不能。坐在那里争论代码是否有问题，这是毫无意义的，因为你可以运行代码，答案自然就有了。许许多多人选择编程，首要的原因就是，他们宁愿将自己的时间花在一个公平有序的地方，一个严格的能者上庸者下的地方，一个只要你是对的就能够赢得任何争论的地方。

没有什么比因为技术原因赢得一场由于政治原因本来要输掉的争论更让人心满意足了。

<br/>

##军事化管理法

士兵有几条要遵守的规矩。规矩一：如果发现周围有地雷，就要立刻静止不动。规矩二：遇到敌人袭击时，就要一边开枪，一边冲向敌人。 好了，下面来是一个面试中遇到的问题：你发现周围有地雷，这时有敌人开始朝你们射击，你们应该怎么做？

答案：不要想地雷，一边开枪，一边朝敌人冲过去。
<br/>
##学校只教java的危险性
函数式编程（functional programming），其中包括递归程序设计。麻省理工学院将这些课程的标准提得很高，还专门设立了一门必修课（课程号 6.001），它的教程《structure and interpretation of computer programs》，作者时 [`Harold Abelson`](https://en.wikipedia.org/wiki/Hal_Abelson) ，中文版《计算机程序的构造和解释》。网上看这门课的[视频地址](http://gropus.csail.mit.edu/mac/classes/6.001/abelson-sussman-lectures)

如果你不懂函数式编程，你就无法创造出MapReduce，正是这种算法使得Google的可扩展性达到如此巨大的规模。术语“Map”和“Reduce”分别来自Lisp语言和函数式编程

<br/>


##在耶鲁大学的演讲
在常春藤（Ivy League）的院校里面，只教授 UNIX、函数式编程、状态机理论。当你顺着排名的顺序往下看到那些越来越少人问津的学校，你就会看到java语言开始出现在课程里了。

我注意到，在微软公司中那些真正优秀的程序员经理都是具有优秀写作能力的人。

微软公司的副总裁 Steve Silonfsky 曾经写过一封电子邮件《康奈尔大学已经开始使用互联网》（Cornell is wired，www.cornell.edu/about/wired）。只靠这封雄辩的电子邮件，微软公司的战略发生了180度大转弯。决定游戏规则的人都是善于写作的人。为什么C语言是最流行的语言，原因就是创始人 Brian Kernighan 和 Dennis Ritchie 写了一本伟大的书《C语言程序设计》。

<br/>

##给计算机系学生的建议
 毕业前练好写作。大学里有些被公认为“写作密集型”课程，一定要去上这样的课程！
毕业前学好 C 语言。你至少要花一学期来了解机器原理，否则你就永远不可能在高级语言的层次写出高效的代码。你也永远无法开放编译器和操作系统。

毕业前学好微观经济学。你必须搞懂供给和需求，你必须明白竞争优势，你必须理解什么是净现值（NVP），什么是贴现，什么是边际效用。只有这样，你才会懂得为什么生意是现在这样做法。

<br/>

##大构想的陷进
 推荐一本书 dreaming in code （梦断代码）
 
 <br/>
 
 <p align="right">cap0dom / 2015-03-19</p>